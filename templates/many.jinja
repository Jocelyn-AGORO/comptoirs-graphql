{% set model_name_lower = model.__name__|lower %}
{% set model_name_caps = model.__name__ %}
{% set related_model_name = model_ %}
{% set model_key_type = get_field_type(model._meta.pk) %}
{% set model_key_name = get_key(model) %}
@{{ model_name_lower }}_router.get('/{ {{model_key_type}}:{{model_key_name}} }/{{ related_model_name|lower }}s', response={200: List[{{ related_model_name }}Schema], 404: ErrorSchema}, tags=['{{ model_name_lower }}s/{ {{ model_key_name }} }/{{ related_model_name }}s'])
def {{ model_name_lower }}_{{ related_model_name|lower }}s(request, {{ model_key_name }}:{{ model_key_type }}):
    try:
        _{{ model_name_lower }} = {{ model_name_caps }}.objects.get(pk={{ model_key_name }})
        return 200, {{ related_model_name }}.objects.prefetch_related('{{ model_name_lower }}').filter({{ model_name_lower }}__pk={{ model_key_name }})
    except {{ model_name_caps }}.DoesNotExist as e:
        return 404, ErrorSchema()


