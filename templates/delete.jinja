{% set model_name_lower = model.__name__|lower %}
{% set model_name_caps = model.__name__ %}
{% set model_key_type = get_field_type(model._meta.pk) %}
{% set model_key_name = get_key(model) %}

# delete the {{ model_name_lower }} with key equal to {{ model_key_name }} if exists
@{{ model_name_lower }}_router.get('/{ {{ model_key_type }}:{{ model_key_name }} }', response={404: ErrorSchema})
def delete_{{ model_name_lower }}(request, {{ model_key_name }}: {{ model_key_type }}):
    try:
        _{{ model_name_lower }} = {{ model_name_caps }}.objects.get(pk={{ model_key_name }})
        _{{ model_name_lower }}.delete()
        return { "message": True }
    except {{ model_name_caps }}.DoesNotExist as e:
        return 404, ErrorSchema()

